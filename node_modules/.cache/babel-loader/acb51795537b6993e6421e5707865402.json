{"ast":null,"code":"var _jsxFileName = \"/Users/soyoscarrh/Documents/Projects/cellular-automata/src/App.tsx\";\nimport React, { useEffect, useRef } from \"react\";\nimport styles from \"./App.module.css\";\nconst data = Array(500).map(_ => 0);\ndata[250] = 1;\n\nconst App = () => {\n  const canvas = useRef(null);\n  useEffect(() => {\n    var _canvas$current;\n\n    const drawer = (_canvas$current = canvas.current) === null || _canvas$current === void 0 ? void 0 : _canvas$current.getContext(\"2d\");\n    if (!drawer) return;\n    drawer.fillStyle = \"white\";\n    let currentLine = 0;\n    const size = 1;\n\n    for (let i = 0, current = 0; i < data.length; ++i) {\n      if (data[i]) drawer.fillRect(current, currentLine, size, size);\n      current += size;\n    }\n  }, []);\n  return React.createElement(\"div\", {\n    className: styles.app,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"main\", {\n    className: styles.appMain,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Edit \", React.createElement(\"code\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"src/App.js\"), \" and save to reload.\"), React.createElement(\"canvas\", {\n    ref: canvas,\n    width: \"400\",\n    height: \"400\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/soyoscarrh/Documents/Projects/cellular-automata/src/App.tsx"],"names":["React","useEffect","useRef","styles","data","Array","map","_","App","canvas","drawer","current","getContext","fillStyle","currentLine","size","i","length","fillRect","app","appMain"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AAEA,MAAMC,IAAI,GAAGC,KAAK,CAAC,GAAD,CAAL,CAAWC,GAAX,CAAeC,CAAC,IAAI,CAApB,CAAb;AACAH,IAAI,CAAC,GAAD,CAAJ,GAAY,CAAZ;;AAEA,MAAMI,GAAG,GAAG,MAAM;AAChB,QAAMC,MAAM,GAAGP,MAAM,CAAoB,IAApB,CAArB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AAAA;;AACd,UAAMS,MAAM,sBAAGD,MAAM,CAACE,OAAV,oDAAG,gBAAgBC,UAAhB,CAA2B,IAA3B,CAAf;AACA,QAAI,CAACF,MAAL,EAAa;AAEbA,IAAAA,MAAM,CAACG,SAAP,GAAmB,OAAnB;AACA,QAAIC,WAAW,GAAG,CAAlB;AACA,UAAMC,IAAI,GAAG,CAAb;;AAEA,SAAK,IAAIC,CAAC,GAAG,CAAR,EAAWL,OAAO,GAAG,CAA1B,EAA6BK,CAAC,GAAGZ,IAAI,CAACa,MAAtC,EAA8C,EAAED,CAAhD,EAAmD;AACjD,UAAIZ,IAAI,CAACY,CAAD,CAAR,EAAaN,MAAM,CAACQ,QAAP,CAAgBP,OAAhB,EAAyBG,WAAzB,EAAsCC,IAAtC,EAA4CA,IAA5C;AACbJ,MAAAA,OAAO,IAAII,IAAX;AACD;AACF,GAZQ,EAYN,EAZM,CAAT;AAcA,SACE;AAAK,IAAA,SAAS,EAAEZ,MAAM,CAACgB,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,SAAS,EAAEhB,MAAM,CAACiB,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cACO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADP,yBADF,EAKE;AAAQ,IAAA,GAAG,EAAEX,MAAb;AAAqB,IAAA,KAAK,EAAC,KAA3B;AAAiC,IAAA,MAAM,EAAC,KAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF,CADF;AAWD,CA5BD;;AA8BA,eAAeD,GAAf","sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport styles from \"./App.module.css\";\n\nconst data = Array(500).map(_ => 0);\ndata[250] = 1;\n\nconst App = () => {\n  const canvas = useRef<HTMLCanvasElement>(null);\n\n  useEffect(() => {\n    const drawer = canvas.current?.getContext(\"2d\");\n    if (!drawer) return;\n\n    drawer.fillStyle = \"white\";\n    let currentLine = 0;\n    const size = 1;\n\n    for (let i = 0, current = 0; i < data.length; ++i) {\n      if (data[i]) drawer.fillRect(current, currentLine, size, size);\n      current += size;\n    }\n  }, []);\n\n  return (\n    <div className={styles.app}>\n      <main className={styles.appMain}>\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n\n        <canvas ref={canvas} width=\"400\" height=\"400\" />\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}