{"ast":null,"code":"var getRules=function getRules(rules_id){return function(s,i){var limit=s.length-1;var n1=i===0?limit:i-1;var n2=i===limit?0:i+1;var id=(s[n1]<<2)+(s[i]<<1)+(s[n2]<<0);return rules_id>>id&1;};};var getLine=function getLine(space,rules_id){var rules=getRules(rules_id);return space.map(function(_,i){return rules(space,i);});};export{getLine};","map":{"version":3,"sources":["/Users/soyoscarrh/Documents/Projects/cellular-automata/src/automata.ts"],"names":["getRules","rules_id","s","i","limit","length","n1","n2","id","getLine","space","rules","map","_"],"mappings":"AAAA,GAAMA,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,QAAD,CAAsB,CACrC,MAAO,UAACC,CAAD,CAAmBC,CAAnB,CAAiC,CACtC,GAAMC,CAAAA,KAAK,CAAGF,CAAC,CAACG,MAAF,CAAW,CAAzB,CACA,GAAMC,CAAAA,EAAE,CAAGH,CAAC,GAAK,CAAN,CAAUC,KAAV,CAAkBD,CAAC,CAAG,CAAjC,CACA,GAAMI,CAAAA,EAAE,CAAGJ,CAAC,GAAKC,KAAN,CAAc,CAAd,CAAkBD,CAAC,CAAG,CAAjC,CAEA,GAAMK,CAAAA,EAAE,CAAG,CAACN,CAAC,CAACI,EAAD,CAAD,EAAS,CAAV,GAAgBJ,CAAC,CAACC,CAAD,CAAD,EAAQ,CAAxB,GAA8BD,CAAC,CAACK,EAAD,CAAD,EAAS,CAAvC,CAAX,CACA,MAAQN,CAAAA,QAAQ,EAAIO,EAAb,CAAmB,CAA1B,CACD,CAPD,CAQD,CATD,CAWA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,KAAD,CAAuBT,QAAvB,CAA4C,CAC1D,GAAMU,CAAAA,KAAK,CAAGX,QAAQ,CAACC,QAAD,CAAtB,CACA,MAAOS,CAAAA,KAAK,CAACE,GAAN,CAAU,SAACC,CAAD,CAAIV,CAAJ,QAAUQ,CAAAA,KAAK,CAACD,KAAD,CAAQP,CAAR,CAAf,EAAV,CAAP,CACD,CAHD,CAKA,OAASM,OAAT","sourcesContent":["const getRules = (rules_id: number) => {\n  return (s: Array<number>, i: number) => {\n    const limit = s.length - 1;\n    const n1 = i === 0 ? limit : i - 1;\n    const n2 = i === limit ? 0 : i + 1;\n\n    const id = (s[n1] << 2) + (s[i] << 1) + (s[n2] << 0);\n    return (rules_id >> id) & 1;\n  };\n};\n\nconst getLine = (space: Array<number>, rules_id: number) => {\n  const rules = getRules(rules_id);\n  return space.map((_, i) => rules(space, i));\n};\n\nexport { getLine };\n"]},"metadata":{},"sourceType":"module"}