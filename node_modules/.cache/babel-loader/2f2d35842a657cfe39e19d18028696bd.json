{"ast":null,"code":"import _slicedToArray from\"/Users/soyoscarrh/Documents/Projects/cellular-automata/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useRef,useState}from\"react\";import styles from\"./App.module.css\";import{getLine}from\"./automata\";var App=function App(){var canvas=useRef(null);var _useState=useState(0),_useState2=_slicedToArray(_useState,2),count=_useState2[0],setCount=_useState2[1];var _useState3=useState(126),_useState4=_slicedToArray(_useState3,2),rule=_useState4[0],setRule=_useState4[1];var _useState5=useState(3),_useState6=_slicedToArray(_useState5,2),size=_useState6[0],setSize=_useState6[1];var _useState7=useState(300),_useState8=_slicedToArray(_useState7,2),steps=_useState8[0],setSteps=_useState8[1];var _useState9=useState(300),_useState10=_slicedToArray(_useState9,2),n=_useState10[0],setN=_useState10[1];useEffect(function(){var data=Array(n).fill(0);data[n/2]=1;var current_canvas=canvas.current;var drawer=current_canvas===null||current_canvas===void 0?void 0:current_canvas.getContext(\"2d\");if(!drawer)return;drawer.clearRect(0,0,current_canvas.width,current_canvas.height);drawer.fillStyle=\"white\";var _loop=function _loop(step,_line){_line.forEach(function(cell,index){if(!cell){line=_line;return;}drawer.fillRect(index*size,step*size,size,size);});_line=getLine(_line,rule);line=_line;};for(var step=0,line=data;step<steps;++step){_loop(step,line);}},[count]);return React.createElement(\"div\",{className:styles.app},React.createElement(\"main\",{className:styles.appMain},React.createElement(\"h2\",null,\"Cellular Automata\"),React.createElement(\"label\",{htmlFor:\"rule\"},\"Rule: \"),React.createElement(\"input\",{id:\"rule\",type:\"number\",min:\"0\",max:\"255\",value:rule,onChange:function onChange(e){return setRule(Number(e.target.value));}}),React.createElement(\"label\",{htmlFor:\"size\"},\"Size of cell: \"),React.createElement(\"input\",{id:\"size\",type:\"number\",min:\"1\",max:\"10\",value:size,onChange:function onChange(e){return setSize(Number(e.target.value));}}),React.createElement(\"label\",{htmlFor:\"n\"},\"Number of cells: \"),React.createElement(\"input\",{id:\"n\",type:\"number\",min:\"10\",step:\"10\",max:\"600\",value:n,onChange:function onChange(e){return setN(Number(e.target.value));}}),React.createElement(\"label\",{htmlFor:\"steps\"},\"Iterations: \"),React.createElement(\"input\",{id:\"steps\",type:\"number\",min:\"10\",step:\"10\",max:\"600\",value:steps,onChange:function onChange(e){return setSteps(Number(e.target.value));}}),React.createElement(\"button\",{onClick:function onClick(){return setCount(function(c){return c+1;});}},\"Go!\"),React.createElement(\"canvas\",{ref:canvas,width:size*n,height:size*steps,style:{border:\"0.1rem solid rgba(255, 255, 255, .5)\",margin:\"2rem\",padding:0}})));};export default App;","map":{"version":3,"sources":["/Users/soyoscarrh/Documents/Projects/cellular-automata/src/App.tsx"],"names":["React","useEffect","useRef","useState","styles","getLine","App","canvas","count","setCount","rule","setRule","size","setSize","steps","setSteps","n","setN","data","Array","fill","current_canvas","current","drawer","getContext","clearRect","width","height","fillStyle","step","line","forEach","cell","index","fillRect","app","appMain","e","Number","target","value","c","border","margin","padding"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport styles from \"./App.module.css\";\n\nimport { getLine } from \"./automata\";\n\nconst App = () => {\n  const canvas = useRef<HTMLCanvasElement>(null);\n  const [count, setCount] = useState(0);\n  const [rule, setRule] = useState(126);\n\n  const [size, setSize] = useState(3);\n  const [steps, setSteps] = useState(300);\n  const [n, setN] = useState(300);\n\n  useEffect(() => {\n    const data = Array(n).fill(0);\n    data[n / 2] = 1;\n\n    const current_canvas = canvas.current;\n    const drawer = current_canvas?.getContext(\"2d\");\n    if (!drawer) return;\n\n    drawer.clearRect(0, 0, current_canvas!.width, current_canvas!.height);\n    drawer.fillStyle = \"white\";\n\n    for (let step = 0, line = data; step < steps; ++step) {\n      line.forEach((cell, index) => {\n        if (!cell) return;\n        drawer.fillRect(index * size, step * size, size, size);\n      });\n\n      line = getLine(line, rule);\n    }\n  }, [count]);\n\n  return (\n    <div className={styles.app}>\n      <main className={styles.appMain}>\n        <h2>Cellular Automata</h2>\n\n        <label htmlFor=\"rule\">Rule: </label>\n        <input\n          id=\"rule\"\n          type=\"number\"\n          min=\"0\"\n          max=\"255\"\n          value={rule}\n          onChange={e => setRule(Number(e.target.value))}\n        />\n\n        <label htmlFor=\"size\">Size of cell: </label>\n        <input\n          id=\"size\"\n          type=\"number\"\n          min=\"1\"\n          max=\"10\"\n          value={size}\n          onChange={e => setSize(Number(e.target.value))}\n        />\n\n        <label htmlFor=\"n\">Number of cells: </label>\n        <input\n          id=\"n\"\n          type=\"number\"\n          min=\"10\"\n          step=\"10\"\n          max=\"600\"\n          value={n}\n          onChange={e => setN(Number(e.target.value))}\n        />\n\n        <label htmlFor=\"steps\">Iterations: </label>\n        <input\n          id=\"steps\"\n          type=\"number\"\n          min=\"10\"\n          step=\"10\"\n          max=\"600\"\n          value={steps}\n          onChange={e => setSteps(Number(e.target.value))}\n        />\n\n        <button onClick={() => setCount(c => c + 1)}>Go!</button>\n\n        <canvas\n          ref={canvas}\n          width={size * n}\n          height={size * steps}\n          style={{\n            border: \"0.1rem solid rgba(255, 255, 255, .5)\",\n            margin: \"2rem\",\n            padding: 0\n          }}\n        />\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}